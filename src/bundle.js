(()=>{"use strict";eval('\n// CONCATENATED MODULE: ./src/data.js\nconst fetchAddedData = (number) => {\n    fetch(`https://api.rawg.io/api/games?key=81183f5004fb4463843a06bde5573086&dates=${number}-01-01,${number}-12-31&ordering=-added/`)\n        .then(res => {\n            if (!res.ok) {\n                throw Error("ERROR");\n            }\n            return res.json();\n        }).then(data => {\n            console.log(data);\n            const half = data.results.splice(15, 19);\n            // debugger;\n            // const sorted \n            // debugger;\n            // if (truth) {\n            //     const sorted = data.results.sort((a, b) => {\n            //         return (a.metacritic < b.metacritic) ? 1 : -1\n            //     })\n            // }\n            const games = data.results.map(game => {\n                return `\n            <div class="game" style="height:${game.added / 35}px; width:${game.added / 35}px">\n                <p> <img style="height:${game.added / 50}px; width:${game.added / 50}px" src="${game.background_image}" alt=${game.name}/> </p>\n                <p> Title: ${game.name} </p>\n                <p> Added by ${game.added} users </p>\n            </div>\n            `\n            }).join(\'\');\n            document.getElementById(\'games-list\')\n                .insertAdjacentHTML("afterbegin", games);\n        }).catch(err => {\n            console.log(err);\n        });\n}\n\nconst fetchMetacriticData = (number) => {\n    fetch(`https://api.rawg.io/api/games?key=81183f5004fb4463843a06bde5573086&dates=${number}-01-01,${number}-12-31&ordering=-added/`)\n        .then(res => {\n            if (!res.ok) {\n                throw Error("ERROR")\n            }\n            return res.json()\n        }).then(data => {\n            const half = data.results.splice(15, 19);\n            // debugger;\n            // const sorted \n            // debugger;\n            // if (truth) {\n            const sorted = data.results.sort((a, b) => {\n                    return (a.metacritic < b.metacritic) ? 1 : -1\n            })\n            const games = data.results.map(game => {\n                return `\n            <li class="game">\n                <img style="height:${game.metacritic * 2}px; width:${game.metacritic * 2}px" src="${game.background_image}" alt=${game.name}/>\n                <p> Title: ${game.name} </p>\n                <p> metacritic score: ${game.metacritic} </p>\n            </li>\n            `\n            }).join(\'\')\n            document.getElementById(\'games-list\')\n                .insertAdjacentHTML("afterbegin", games)\n        }).catch(err => {\n            console.log(err)\n        })\n}\n\n{/* <p> Name: ${game.name}, added by ${game.added} users, metacritic score: ${game.metacritic} </p> */}\n// CONCATENATED MODULE: ./src/filter.js\n;\n// export const popResult = () => {\n//     const popularity = document.getElementById("popularity")\n//     popularity.addEventListener("click", e => {\n//         return true;\n//     })\n// }\n\n// export const critcalResult = () => {\n//     const critical = document.getElementById("metacritic")\n//     critical.addEventListener("click", e => {\n//         return false;\n//     })\n// }\n\nconst buttonResult = () => {\n    const popularity = document.getElementById("popularity")\n    popularity.addEventListener("click", e => {\n        \n        fetchAddedData(2015);\n        // location.reload();\n    });\n\n    const critical = document.getElementById("metacritic")\n    critical.addEventListener("click", e => {\n        // location.reload();\n        fetchMetacriticData(2015);\n    });\n};\n\n/* harmony default export */ const filter = (buttonResult);\n\n\n// CONCATENATED MODULE: ./src/main.js\n;\n\n\ndocument.addEventListener("DOMContentLoaded", () => {\n    filter();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SYXcoZykvLi9zcmMvZGF0YS5qcz9mNjAxIiwid2VicGFjazovL1JhdyhnKS8uL3NyYy9maWx0ZXIuanM/OGI2OCIsIndlYnBhY2s6Ly9SYXcoZykvLi9zcmMvbWFpbi5qcz81NmQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQU87QUFDUCxzRkFBc0YsT0FBTyxTQUFTLE9BQU87QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxnQkFBZ0IsR0FBRyxTQUFTLGdCQUFnQjtBQUMxRix5Q0FBeUMsZ0JBQWdCLEdBQUcsU0FBUyxnQkFBZ0IsV0FBVyxzQkFBc0IsUUFBUSxVQUFVO0FBQ3hJLDZCQUE2QixVQUFVO0FBQ3ZDLCtCQUErQixXQUFXO0FBQzFDO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDs7QUFFTztBQUNQLHNGQUFzRixPQUFPLFNBQVMsT0FBTztBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvQkFBb0IsR0FBRyxTQUFTLG9CQUFvQixXQUFXLHNCQUFzQixRQUFRLFVBQVU7QUFDNUksNkJBQTZCLFVBQVU7QUFDdkMsd0NBQXdDLGdCQUFnQjtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7O0FBRUEsQ0FBQyxlQUFlLFVBQVUsYUFBYSxXQUFXLDRCQUE0QixnQkFBZ0IsUzs7QUNsRTlGLENBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLGNBQWM7QUFDdEI7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbUJBQW1CO0FBQzNCLEtBQUs7QUFDTDs7QUFFQSw2Q0FBZSxZQUFZLEVBQUM7Ozs7QUM5QjVCLENBQTREO0FBQ3hCOztBQUVwQztBQUNBLElBQUksTUFBWTtBQUNoQixDQUFDIiwiZmlsZSI6IjE1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBmZXRjaEFkZGVkRGF0YSA9IChudW1iZXIpID0+IHtcbiAgICBmZXRjaChgaHR0cHM6Ly9hcGkucmF3Zy5pby9hcGkvZ2FtZXM/a2V5PTgxMTgzZjUwMDRmYjQ0NjM4NDNhMDZiZGU1NTczMDg2JmRhdGVzPSR7bnVtYmVyfS0wMS0wMSwke251bWJlcn0tMTItMzEmb3JkZXJpbmc9LWFkZGVkL2ApXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKFwiRVJST1JcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfSkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgY29uc3QgaGFsZiA9IGRhdGEucmVzdWx0cy5zcGxpY2UoMTUsIDE5KTtcbiAgICAgICAgICAgIC8vIGRlYnVnZ2VyO1xuICAgICAgICAgICAgLy8gY29uc3Qgc29ydGVkIFxuICAgICAgICAgICAgLy8gZGVidWdnZXI7XG4gICAgICAgICAgICAvLyBpZiAodHJ1dGgpIHtcbiAgICAgICAgICAgIC8vICAgICBjb25zdCBzb3J0ZWQgPSBkYXRhLnJlc3VsdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgLy8gICAgICAgICByZXR1cm4gKGEubWV0YWNyaXRpYyA8IGIubWV0YWNyaXRpYykgPyAxIDogLTFcbiAgICAgICAgICAgIC8vICAgICB9KVxuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgY29uc3QgZ2FtZXMgPSBkYXRhLnJlc3VsdHMubWFwKGdhbWUgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2FtZVwiIHN0eWxlPVwiaGVpZ2h0OiR7Z2FtZS5hZGRlZCAvIDM1fXB4OyB3aWR0aDoke2dhbWUuYWRkZWQgLyAzNX1weFwiPlxuICAgICAgICAgICAgICAgIDxwPiA8aW1nIHN0eWxlPVwiaGVpZ2h0OiR7Z2FtZS5hZGRlZCAvIDUwfXB4OyB3aWR0aDoke2dhbWUuYWRkZWQgLyA1MH1weFwiIHNyYz1cIiR7Z2FtZS5iYWNrZ3JvdW5kX2ltYWdlfVwiIGFsdD0ke2dhbWUubmFtZX0vPiA8L3A+XG4gICAgICAgICAgICAgICAgPHA+IFRpdGxlOiAke2dhbWUubmFtZX0gPC9wPlxuICAgICAgICAgICAgICAgIDxwPiBBZGRlZCBieSAke2dhbWUuYWRkZWR9IHVzZXJzIDwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgYFxuICAgICAgICAgICAgfSkuam9pbignJyk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FtZXMtbGlzdCcpXG4gICAgICAgICAgICAgICAgLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyYmVnaW5cIiwgZ2FtZXMpO1xuICAgICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBmZXRjaE1ldGFjcml0aWNEYXRhID0gKG51bWJlcikgPT4ge1xuICAgIGZldGNoKGBodHRwczovL2FwaS5yYXdnLmlvL2FwaS9nYW1lcz9rZXk9ODExODNmNTAwNGZiNDQ2Mzg0M2EwNmJkZTU1NzMwODYmZGF0ZXM9JHtudW1iZXJ9LTAxLTAxLCR7bnVtYmVyfS0xMi0zMSZvcmRlcmluZz0tYWRkZWQvYClcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJFUlJPUlwiKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgICAgfSkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhhbGYgPSBkYXRhLnJlc3VsdHMuc3BsaWNlKDE1LCAxOSk7XG4gICAgICAgICAgICAvLyBkZWJ1Z2dlcjtcbiAgICAgICAgICAgIC8vIGNvbnN0IHNvcnRlZCBcbiAgICAgICAgICAgIC8vIGRlYnVnZ2VyO1xuICAgICAgICAgICAgLy8gaWYgKHRydXRoKSB7XG4gICAgICAgICAgICBjb25zdCBzb3J0ZWQgPSBkYXRhLnJlc3VsdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGEubWV0YWNyaXRpYyA8IGIubWV0YWNyaXRpYykgPyAxIDogLTFcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBjb25zdCBnYW1lcyA9IGRhdGEucmVzdWx0cy5tYXAoZ2FtZSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cImdhbWVcIj5cbiAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPVwiaGVpZ2h0OiR7Z2FtZS5tZXRhY3JpdGljICogMn1weDsgd2lkdGg6JHtnYW1lLm1ldGFjcml0aWMgKiAyfXB4XCIgc3JjPVwiJHtnYW1lLmJhY2tncm91bmRfaW1hZ2V9XCIgYWx0PSR7Z2FtZS5uYW1lfS8+XG4gICAgICAgICAgICAgICAgPHA+IFRpdGxlOiAke2dhbWUubmFtZX0gPC9wPlxuICAgICAgICAgICAgICAgIDxwPiBtZXRhY3JpdGljIHNjb3JlOiAke2dhbWUubWV0YWNyaXRpY30gPC9wPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH0pLmpvaW4oJycpXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FtZXMtbGlzdCcpXG4gICAgICAgICAgICAgICAgLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyYmVnaW5cIiwgZ2FtZXMpXG4gICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgIH0pXG59XG5cbnsvKiA8cD4gTmFtZTogJHtnYW1lLm5hbWV9LCBhZGRlZCBieSAke2dhbWUuYWRkZWR9IHVzZXJzLCBtZXRhY3JpdGljIHNjb3JlOiAke2dhbWUubWV0YWNyaXRpY30gPC9wPiAqL30iLCJpbXBvcnQgeyBmZXRjaEFkZGVkRGF0YSwgZmV0Y2hNZXRhY3JpdGljRGF0YSB9IGZyb20gJy4vZGF0YSdcbi8vIGV4cG9ydCBjb25zdCBwb3BSZXN1bHQgPSAoKSA9PiB7XG4vLyAgICAgY29uc3QgcG9wdWxhcml0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG9wdWxhcml0eVwiKVxuLy8gICAgIHBvcHVsYXJpdHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4ge1xuLy8gICAgICAgICByZXR1cm4gdHJ1ZTtcbi8vICAgICB9KVxuLy8gfVxuXG4vLyBleHBvcnQgY29uc3QgY3JpdGNhbFJlc3VsdCA9ICgpID0+IHtcbi8vICAgICBjb25zdCBjcml0aWNhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWV0YWNyaXRpY1wiKVxuLy8gICAgIGNyaXRpY2FsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbi8vICAgICAgICAgcmV0dXJuIGZhbHNlO1xuLy8gICAgIH0pXG4vLyB9XG5cbmNvbnN0IGJ1dHRvblJlc3VsdCA9ICgpID0+IHtcbiAgICBjb25zdCBwb3B1bGFyaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwb3B1bGFyaXR5XCIpXG4gICAgcG9wdWxhcml0eS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB7XG4gICAgICAgIFxuICAgICAgICBmZXRjaEFkZGVkRGF0YSgyMDE1KTtcbiAgICAgICAgLy8gbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBjcml0aWNhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWV0YWNyaXRpY1wiKVxuICAgIGNyaXRpY2FsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgICAgICAgLy8gbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIGZldGNoTWV0YWNyaXRpY0RhdGEoMjAxNSk7XG4gICAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBidXR0b25SZXN1bHQ7XG5cbiIsImltcG9ydCB7IGZldGNoQWRkZWREYXRhLCBmZXRjaE1ldGFjcml0aWNEYXRhIH0gZnJvbSAnLi9kYXRhJ1xuaW1wb3J0IGJ1dHRvblJlc3VsdCBmcm9tICcuL2ZpbHRlcic7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBidXR0b25SZXN1bHQoKTtcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///154\n')})();